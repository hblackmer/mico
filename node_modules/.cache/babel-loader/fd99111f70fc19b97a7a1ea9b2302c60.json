{"ast":null,"code":"var _jsxFileName = \"/Users/helene/Desktop/Projects/mico-react/src/components/Timer/Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = ({\n  callQueuedTime\n}) => {\n  _s();\n\n  const [time, setTime] = useState(() => new Date().getTime());\n  useEffect(() => {\n    const queuedTime = new Date(callQueuedTime).getTime();\n    const intervalId = setInterval(function () {\n      setTime(new Date().getTime() - queuedTime);\n    }, 1000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [callQueuedTime]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: time\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Timer, \"MavFG+lCifhgdMVR2XgMu5Pty5U=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/helene/Desktop/Projects/mico-react/src/components/Timer/Timer.js"],"names":["React","useEffect","useState","Timer","callQueuedTime","time","setTime","Date","getTime","queuedTime","intervalId","setInterval","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAAA;;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,MAAM,IAAIK,IAAJ,GAAWC,OAAX,EAAP,CAAhC;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,UAAU,GAAG,IAAIF,IAAJ,CAASH,cAAT,EAAyBI,OAAzB,EAAnB;AACA,UAAME,UAAU,GAAGC,WAAW,CAAC,YAAY;AACvCL,MAAAA,OAAO,CAAC,IAAIC,IAAJ,GAAWC,OAAX,KAAuBC,UAAxB,CAAP;AACH,KAF6B,EAE3B,IAF2B,CAA9B;AAGA,WAAO,MAAM;AACTG,MAAAA,aAAa,CAACF,UAAD,CAAb;AACH,KAFD;AAGH,GARQ,EAQN,CAACN,cAAD,CARM,CAAT;AASA,sBAAO;AAAA,cAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAZD;;GAAMF,K;;KAAAA,K;AAcN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Timer = ({ callQueuedTime }) => {\n    const [time, setTime] = useState(() => new Date().getTime());\n    useEffect(() => {\n        const queuedTime = new Date(callQueuedTime).getTime();\n        const intervalId = setInterval(function () {\n            setTime(new Date().getTime() - queuedTime);\n        }, 1000);\n        return () => {\n            clearInterval(intervalId);\n        }\n    }, [callQueuedTime]);\n    return <p>{time}</p>;\n};\n\nexport default Timer;"]},"metadata":{},"sourceType":"module"}