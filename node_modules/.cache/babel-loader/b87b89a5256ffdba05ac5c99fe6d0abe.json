{"ast":null,"code":"var _jsxFileName = \"/Users/helene/Desktop/Projects/mico-react/src/components/Test/Test.js\";\nimport React, { Component } from 'react';\nimport { Progress, Button, Container, Row, Col } from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Timer from 'react-timer-wrapper';\nimport Timecode from 'react-timecode';\nimport Question from '../Question/Question';\nimport Answer from '../Answer/Answer';\nimport './Test.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    javascript: state.javascript,\n    react: state.react\n  };\n};\n\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAnswer: false,\n      timerActive: false,\n      questionNum: 0\n    };\n    this.questionSubmitted = this.questionSubmitted.bind(this);\n    this.questionPrev = this.questionPrev.bind(this);\n    this.questionNext = this.questionNext.bind(this);\n    this.hideComponent = this.hideComponent.bind(this);\n  }\n\n  questionSubmitted() {\n    this.setState(prevState => {\n      return {\n        questionNum: prevState.questionNum + 1\n      };\n    });\n  }\n\n  questionPrev() {\n    this.setState(prevState => {\n      return {\n        questionNum: prevState.questionNum + 1\n      };\n    });\n  }\n\n  questionNext() {\n    this.setState(prevState => {\n      return {\n        questionNum: prevState.questionNum - 1\n      };\n    });\n  }\n\n  hideComponent() {\n    this.setState({\n      showAnswer: !this.state.showAnswer,\n      timerActive: true\n    });\n  }\n\n  render() {\n    const {\n      showAnswer\n    } = this.state;\n    const questionList = [];\n    const questionMaxNumSelected = 3;\n    const calculateProgress = this.state.questionNum / questionMaxNumSelected * 100;\n\n    const GenerateQuestions = () => {\n      while (questionList.length < questionMaxNumSelected) {\n        let randomQuestionIdx = Math.floor(Math.random() * this.props.javascript.length);\n        let randomQuestion = this.props.javascript[randomQuestionIdx];\n\n        if (questionList.indexOf(randomQuestion) === -1) {\n          questionList.push(this.props.javascript[randomQuestionIdx]);\n        }\n      }\n    };\n\n    const AskQuestion = () => {\n      if (this.state.questionNum !== questionMaxNumSelected) {\n        let question = questionList[this.state.questionNum].question;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Question, {\n            question: question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 20\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dark-overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: {\n              size: 10,\n              offset: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                className: \"test-timer\",\n                children: /*#__PURE__*/_jsxDEV(Timer, {\n                  active: this.state.timerActive,\n                  duration: null,\n                  className: \"h4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-stopwatch\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"  \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Timecode, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                sm: {\n                  size: 10,\n                  offset: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(Progress, {\n                  animated: true,\n                  className: \"progress\",\n                  color: \"success\",\n                  value: calculateProgress,\n                  children: [this.state.questionNum, \"/\", questionMaxNumSelected]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), showAnswer ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"test-category\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fab fa-js-square\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 45\n                  }, this), \" JavaScript\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 37\n              }, this), GenerateQuestions(), AskQuestion(), /*#__PURE__*/_jsxDEV(Answer, {\n                submit: this.questionSubmitted,\n                prev: this.questionPrev,\n                next: this.questionNext\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onClick: () => this.hideComponent(),\n              children: \"START\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps)(Test));","map":{"version":3,"sources":["/Users/helene/Desktop/Projects/mico-react/src/components/Test/Test.js"],"names":["React","Component","Progress","Button","Container","Row","Col","withRouter","connect","Timer","Timecode","Question","Answer","mapStateToProps","state","javascript","react","Test","constructor","props","showAnswer","timerActive","questionNum","questionSubmitted","bind","questionPrev","questionNext","hideComponent","setState","prevState","render","questionList","questionMaxNumSelected","calculateProgress","GenerateQuestions","length","randomQuestionIdx","Math","floor","random","randomQuestion","indexOf","push","AskQuestion","question","size","offset"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Progress,\n    Button,\n    Container, Row, Col,\n} from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Timer from 'react-timer-wrapper';\nimport Timecode from 'react-timecode';\nimport Question from '../Question/Question';\nimport Answer from '../Answer/Answer';\nimport './Test.css';\n\nconst mapStateToProps = state => {\n    return {\n        javascript: state.javascript,\n        react: state.react,\n    };\n};\n\nclass Test extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          showAnswer: false,\n          timerActive: false,\n          questionNum: 0\n        };\n        this.questionSubmitted = this.questionSubmitted.bind(this);\n        this.questionPrev = this.questionPrev.bind(this);\n        this.questionNext = this.questionNext.bind(this);\n        this.hideComponent = this.hideComponent.bind(this);\n    }\n\n    questionSubmitted() {\n        this.setState(prevState => {\n            return {questionNum: prevState.questionNum + 1}\n        });\n    }\n\n    questionPrev() {\n        this.setState(prevState => {\n            return {questionNum: prevState.questionNum + 1}\n        });\n    }\n\n    questionNext() {\n        this.setState(prevState => {\n            return {questionNum: prevState.questionNum - 1}\n        });\n    }\n\n    hideComponent() {\n        this.setState({\n            showAnswer: !this.state.showAnswer,\n            timerActive: true\n        });\n    }\n\n    render() {\n        const { showAnswer } = this.state;\n        const questionList = [];\n        const questionMaxNumSelected = 3;\n        const calculateProgress = (this.state.questionNum / questionMaxNumSelected) * 100;\n\n\n        const GenerateQuestions = () => {\n            while (questionList.length < questionMaxNumSelected) {\n                let randomQuestionIdx = Math.floor(Math.random()*this.props.javascript.length);\n                let randomQuestion = this.props.javascript[randomQuestionIdx];\n                if (questionList.indexOf(randomQuestion) === -1) {\n                    questionList.push(this.props.javascript[randomQuestionIdx]);\n                }\n            }\n        };    \n\n        const AskQuestion = () => {\n            if (this.state.questionNum !== questionMaxNumSelected) {\n                let question = questionList[this.state.questionNum].question;\n                return (\n                    <div>\n                        <Question question={question} />\n                    </div>\n                );\n            }\n            return <div></div>\n        };\n\n        return (\n            <div className=\"test\">\n                <Container>\n                    <div className=\"dark-overlay\"></div>\n                    <Row>\n                        <Col sm={{ size: 10, offset: 1 }}>\n                            <Row>\n                                <Col className=\"test-timer\">\n                                    <Timer active={this.state.timerActive} duration={null} className=\"h4\">\n                                        <i className=\"fas fa-stopwatch\" />\n                                        <span>  </span>\n                                        <Timecode />\n                                    </Timer>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm={{ size: 10, offset: 1 }}>\n                                    <Progress animated className=\"progress\" color=\"success\" value={calculateProgress}>{this.state.questionNum}/{questionMaxNumSelected}</Progress>\n                                </Col>\n                            </Row>\n                            { showAnswer ? \n                                <React.Fragment>\n                                    <Row>\n                                        <Col className=\"test-category\">\n                                            <i className=\"fab fa-js-square\" /> JavaScript\n                                        </Col>\n                                    </Row>\n                                    {GenerateQuestions()}\n                                    {AskQuestion()}\n                                    <Answer submit={this.questionSubmitted} prev={this.questionPrev} next={this.questionNext}/>\n                                </React.Fragment> : \n                                <Button color=\"primary\" onClick={() => \n                                    this.hideComponent()\n                                }>START</Button>\n                            }\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n  \nexport default withRouter(connect(mapStateToProps)(Test));"]},"metadata":{},"sourceType":"module"}