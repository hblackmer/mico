{"ast":null,"code":"var _jsxFileName = \"/Users/helene/Desktop/Projects/mico-react/src/components/Categories/Categories.js\";\nimport React, { Component } from 'react';\nimport './Categories.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Categories extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [{\n        name: \"HTML\",\n        category: \"list1\",\n        bgcolor: \"#FFB695\"\n      }, {\n        name: \"CSS\",\n        category: \"list1\",\n        bgcolor: \"#96D1CD\"\n      }, {\n        name: \"JavaScript\",\n        category: \"list1\",\n        bgcolor: \"#96D1CD\"\n      }, {\n        name: \"React\",\n        category: \"list1\",\n        bgcolor: \"#96D1CD\"\n      }]\n    };\n\n    this.onDragOver = ev => {\n      ev.preventDefault();\n    };\n\n    this.onDrop = (ev, cat) => {\n      let id = ev.dataTransfer.getData(\"id\");\n      let tasks = this.state.tasks.filter(task => {\n        if (task.name == id) {\n          task.category = cat;\n        }\n\n        return task;\n      });\n      this.setState({ ...this.state,\n        tasks\n      });\n    };\n\n    this.onDragStart = (ev, id) => {\n      console.log('dragstart:', id);\n      ev.dataTransfer.setData(\"id\", id);\n    };\n  }\n\n  render() {\n    var tasks = {\n      list1: [],\n      list2: []\n    };\n    this.state.tasks.forEach(t => {\n      tasks[t.category].push( /*#__PURE__*/_jsxDEV(\"div\", {\n        onDragStart: e => this.onDragStart(e, t.name),\n        draggable: true,\n        className: \"draggable\",\n        style: {\n          backgroundColor: t.bgcolor\n        },\n        children: t.name\n      }, t.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-drag\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header\",\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo\",\n        onDragOver: e => this.onDragOver(e),\n        onDrop: e => {\n          this.onDrop(e, \"todo\");\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-header\",\n          children: \"Not Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), tasks.list1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"droppable\",\n        onDrop: e => this.onDrop(e, \"done\"),\n        onDragOver: ev => this.onDragOver(ev),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-header\",\n          children: \"Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), tasks.list2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Categories;","map":{"version":3,"sources":["/Users/helene/Desktop/Projects/mico-react/src/components/Categories/Categories.js"],"names":["React","Component","Categories","state","tasks","name","category","bgcolor","onDragOver","ev","preventDefault","onDrop","cat","id","dataTransfer","getData","filter","task","setState","onDragStart","console","log","setData","render","list1","list2","forEach","t","push","e","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Categories.css';\n\nclass Categories extends Component {\n    state = {\n        tasks: [\n            {name:\"HTML\",category:\"list1\", bgcolor: \"#FFB695\"},\n            {name:\"CSS\", category:\"list1\", bgcolor: \"#96D1CD\"},\n            {name:\"JavaScript\", category:\"list1\", bgcolor: \"#96D1CD\"},\n            {name:\"React\", category:\"list1\", bgcolor: \"#96D1CD\"}\n        ]\n    }\n\n    onDragOver = (ev) => {\n        ev.preventDefault();\n    }\n\n    onDrop = (ev, cat) => {\n       let id = ev.dataTransfer.getData(\"id\");\n       let tasks = this.state.tasks.filter((task) => {\n           if (task.name == id) {\n               task.category = cat;\n           }\n           return task;\n       });\n\n       this.setState({\n           ...this.state,\n           tasks\n       });\n    }\n\n    onDragStart = (ev, id) => {\n        console.log('dragstart:',id);\n        ev.dataTransfer.setData(\"id\", id);\n    }\n\n    render() {\n        var tasks = {\n            list1: [],\n            list2: []\n        }\n\n        this.state.tasks.forEach ((t) => {\n            tasks[t.category].push(\n                <div key={t.name} \n                    onDragStart = {(e) => this.onDragStart(e, t.name)}\n                    draggable\n                    className=\"draggable\"\n                    style = {{backgroundColor: t.bgcolor}}\n                    >\n                    {t.name}\n                </div>\n            );\n        });\n\n        return (\n            <div className=\"container-drag\">\n                <h2 className=\"header\">Categories</h2>\n                <div className=\"todo\"\n                    onDragOver={(e)=>this.onDragOver(e)}\n                    onDrop={(e)=>{this.onDrop(e, \"todo\")}}>\n                    <span className=\"task-header\">Not Selected</span>\n                    {tasks.list1}\n                </div>\n                <div className=\"droppable\" \n                    onDrop={(e)=>this.onDrop(e, \"done\")}\n                    onDragOver={(ev)=>this.onDragOver(ev)}>\n                    <span className=\"task-header\">Selected</span>\n                    {tasks.list2}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Categories;"]},"metadata":{},"sourceType":"module"}